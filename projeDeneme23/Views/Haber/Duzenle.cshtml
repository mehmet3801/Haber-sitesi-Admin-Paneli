@model projeDeneme23.Models.Haber

@{
    ViewBag.Title = "Haber Düzenle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h3 class="card-title">
                <i class="fas fa-edit me-2"></i>Haber Düzenle
            </h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Duzenle", "Haber", FormMethod.Post, new { enctype = "multipart/form-data", @class = "needs-validation", novalidate = "novalidate" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Id)

                <div class="row">
                    <div class="col-md-8">
                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.Baslik, "Başlık", new { @class = "form-label fw-bold" })
                            @Html.TextBoxFor(m => m.Baslik, new { @class = "form-control", required = "required", placeholder = "Haber başlığını giriniz" })
                            @Html.ValidationMessageFor(m => m.Baslik, "", new { @class = "text-danger" })
                            <div class="form-text">Maksimum 120 karakter</div>
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.Icerik, "İçerik", new { @class = "form-label fw-bold" })
                            @Html.TextAreaFor(m => m.Icerik, new { @class = "form-control", rows = 8, required = "required", placeholder = "Haber içeriğini giriniz" })
                            @Html.ValidationMessageFor(m => m.Icerik, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.Kategori, "Kategori", new { @class = "form-label fw-bold" })
                            @Html.DropDownListFor(m => m.Kategori, ViewBag.Kategoriler as SelectList, "Kategori Seçiniz", new { @class = "form-select", required = "required" })
                            @Html.ValidationMessageFor(m => m.Kategori, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.Yazar, "Yazar", new { @class = "form-label fw-bold" })
                            @Html.TextBoxFor(m => m.Yazar, new { @class = "form-control", required = "required", placeholder = "Yazar adı giriniz" })
                            @Html.ValidationMessageFor(m => m.Yazar, "", new { @class = "text-danger" })
                        </div>

                        <div class="card mb-3">
                            <div class="card-header bg-light">
                                <h6 class="mb-0">Fotoğraf Yönetimi</h6>
                            </div>
                            <div class="card-body text-center">
                                @if (!string.IsNullOrEmpty(Model.AnaResimYolu))
                                {
                                    <img src="@Model.AnaResimYolu" class="img-thumbnail mb-3" style="max-height: 200px;" alt="Mevcut Haber Fotoğrafı" />
                                    <div class="form-check mb-3">
                                        <input class="form-check-input" type="checkbox" name="ResmiSil" id="ResmiSil" value="true">
                                        <label class="form-check-label text-danger" for="ResmiSil">
                                            Fotoğrafı Sil
                                        </label>
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-warning">Bu haberin fotoğrafı yok</div>
                                }

                                <div class="form-group">
                                    <label for="Resim" class="btn btn-outline-primary w-100">
                                        <i class="fas fa-cloud-upload-alt me-2"></i>
                                        Yeni Fotoğraf Seç
                                    </label>
                                    <input type="file" name="Resim" id="Resim" class="d-none" accept="image/*" onchange="previewImage(this)" />
                                    <div class="form-text">JPG/PNG formatında, maks. 5MB</div>
                                    <img id="imagePreview" class="img-thumbnail mt-2 d-none" style="max-height: 150px;" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-between mt-4">
                    <a href="@Url.Action("Index", "Haber")" class="btn btn-secondary">
                        <i class="fas fa-arrow-left me-2"></i>İptal
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-2"></i>Güncellemeleri Kaydet
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function previewImage(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#imagePreview').attr('src', e.target.result).removeClass('d-none');
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        // Form validation
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}